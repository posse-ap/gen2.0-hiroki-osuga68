#～大前提～
#DockerはLinux上でしか動かない！
#(続き）Docker Desktop.......Microsoftが用意してくれたLinuxカーネル（WSL2用にカスタマイズされた奴）を使ってDockerを起動！vagrantは使用しない

#～Dockerとは～
#Docker........すべての依存関係をパッケージ化して、コンテナとして動かす
#ホストマシンの上に「コンテナ」と呼ばれる仮想環境を構築し、そのコンテナのなかでアプリケーション等を動かす

#～Docker Composeとは～
#Docker compose .......沢山のコンテナを同時に管理、実行（Dockerエンジンの代わりに使用）

#～nginxとは～
#コンピュータを制御するオペレーティングシステム（OS）と、特定の処理を行うアプリケーションソフトウェアとの仲立ちをするミドルウェアの一種で
#(続)webサーバーソフトウェアと呼ばれる
#HTTPリクエストを送った時に、何かしらのレスポンスを返すプログラム
#大容量のデータ配信や大量同時接続に耐えることを目的に設計された

#～nginxとPHPの連携～
#前提・・・phpをブラウザ（フロント）で動かすためには、1.phpモジュールを使う 2.CGIを用いる、のいずれか
#nginxにはphpのモジュールがないため、phpを読み取らせるためにCGIを用いる
#nginxがphp-fpmにphpの処理を依頼し、php-fpmがphpを処理。

#CGI・・・ウェブサーバ上でユーザプログラムを動作させるための仕組み。
#fastCGI・・・CGI の問題を解決し、プログラム動作速度の向上およびサーバ負荷の低下が可能。

#～fpmとは。そしてなぜ採用するのか～
#FPM・・・CGIの上位互換であるFastCGIをPHPで実装したもの。高負荷のサイトで有用な追加機能を用意。
# → nginxではFastCGIを通してPHPを実行するのでFPMが必要。

#nginx と php-fpm の通信方式は 2 通り→「TCP」、もしくは「UNIX ドメインソケット」

#TCP で通信する場合は nginx の設定ファイルの定義のみで実現できるので今回はこちら採用



version: '3'
services:
  #サービス...nginx
  nginx:
    image: nginx:latest
    ports:
      - 8080:80
    volumes: #データを永続化するたに利用する仕組み,コンテナを削除しても永続的にデータは残る
      - ./nginx/nginx.conf:/etc/nginx/conf.d/default.conf
      - ./www/html:/var/www/html
    depends_on:
      - php #指定元のServiceが実行されるよりも前<=>nginxが実行されるよりも前に、phpが呼び出されるようになる


   #サービス...php
  php:
    image: php:7-fpm
    build: ./php #Dockerfile のあるディレクトリのパスを指定します。
    volumes:
      - ./www/html:/var/www/html
    depends_on:
      - db

  #サービス...db
  db:
    # image: mysql:5.7
    build:
      context: ./mysql
    ports:
      - 13306:3306
    volumes:
      - ./mysql/data:/var/lib/mysql
      - ./mysql/my.cnf:/etc/mysql/conf.d/my.cnf
      - ./mysql/sql:/docker-entrypoint-initdb.d
    environment:
      - MYSQL_DATABASE=quizy
      - MYSQL_USER=quizy
      - MYSQL_PASSWORD=password
      - MYSQL_ROOT_PASSWORD=password
      # <%= ENV['RAILS_DATABASE_PASSWORD'] %> #初回実行時、rootパス自動作成

  phpmyadmin:
    image: phpmyadmin/phpmyadmin:latest
    ports:
      - 8888:80
    depends_on:
      - db
