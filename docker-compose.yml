version: '3'
services:
  #サービス...nginx
  nginx:
    image: nginx:latest
    ports:
      - 8080:80
    volumes: #データを永続化するたに利用する仕組み,コンテナを削除しても永続的にデータは残る
      - ./nginx/nginx.conf:/etc/nginx/conf.d/default.conf
      - ./www/html:/var/www/html
    depends_on:
      - php #指定元のServiceが実行されるよりも前<=>nginxが実行されるよりも前に、phpが呼び出されるようになる


   #サービス...php
  php:
    image: php:7-fpm
    build: ./php #Dockerfile のあるディレクトリのパスを指定します。
    volumes:
      - ./www/html:/var/www/html
    depends_on:
      - db

  #サービス...db
  db:
    # image: mysql:5.7
    build:
      context: ./mysql
    command: --default-authentication-plugin=mysql_native_password
#↑....MYSQL8.0ではログイン認証方式に caching_sha2_password がデフォルトで設定されています。
#しかし、PHPのMySQL接続ライブラリはこれに対応していないらしいです。  
#以上のコマンドで、認証方式をmysql_native_passwordに変更します。（僕の環境だとターミナルからはアクセス権限ではじかれた）
    ports:
      - 13306:3306
      # mysqlのデータを永続化させる（コンテナを削除し再作成した際にテーブルが消えるのを防ぐ）ためにvolumesが必要
      #ホスト側には自動で/mysql/dataのディレクトリが作られます
    volumes:
      - ./mysql/data:/var/lib/mysql
      - ./mysql/my.cnf:/etc/mysql/conf.d/my.cnf
      - ./mysql/sql:/docker-entrypoint-initdb.d
      #↑sqlファイルに、コンテナ作成時に初期データを流し込める
    environment:
      - MYSQL_DATABASE=webapp
      - MYSQL_USER=webapp
      - MYSQL_PASSWORD=password
      - MYSQL_ROOT_PASSWORD=password
      # <%= ENV['RAILS_DATABASE_PASSWORD'] %> #初回実行時、rootパス自動作成

  phpmyadmin:
    image: phpmyadmin/phpmyadmin:latest
    ports:
      - 8888:80
    depends_on:
      - db